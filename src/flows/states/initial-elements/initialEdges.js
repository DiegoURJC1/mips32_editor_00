import { Algorithm } from "../../../edges/EditableEdge/constants.ts";
import { v4 as uuidv4 } from 'uuid';

export const initialEdges = [
    {
        id: 'node0->node1',
        type: 'editable-edge',
        source: 'node0',
        target: 'node1',
        sourceHandle: 'output',
        targetHandle: 'input',
        animated: false,
        data: {
            algorithm: Algorithm.Linear,
            points: [],
        },
    },
    {
        id: 'node1->node2',
        type: 'editable-edge',
        source: 'node1',
        target: 'node2',
        sourceHandle: 'output',
        targetHandle: 'input',
        animated: false,
        data: {
            algorithm: Algorithm.Linear,
            points: [],
        },
    },
    {
        id: 'node1->node6',
        type: 'editable-edge',
        source: 'node1',
        target: 'node6',
        sourceHandle: 'output',
        targetHandle: 'input',
        animated: false,
        data: {
            algorithm: Algorithm.Linear,
            points: [],
        },
    },
    {
        id: 'node1->node8',
        type: 'editable-edge',
        source: 'node1',
        target: 'node8',
        sourceHandle: 'output',
        targetHandle: 'input',
        animated: false,
        data: {
            algorithm: Algorithm.Linear,
            points: [],
        },
    },
    {
        id: 'node1->node9',
        type: 'editable-edge',
        source: 'node1',
        target: 'node9',
        sourceHandle: 'output',
        targetHandle: 'input',
        animated: false,
        data: {
            algorithm: Algorithm.Linear,
            points: [],
        },
    },
    {
        id: 'node2->node3',
        type: 'editable-edge',
        source: 'node2',
        target: 'node3',
        sourceHandle: 'output',
        targetHandle: 'input',
        animated: false,
        data: {
            algorithm: Algorithm.Linear,
            points: [],
        },
    },
    {
        id: 'node2->node5',
        type: 'editable-edge',
        source: 'node2',
        target: 'node5',
        sourceHandle: 'output',
        targetHandle: 'input',
        animated: false,
        data: {
            algorithm: Algorithm.Linear,
            points: [],
        },
    },
    {
        id: 'node3->node4',
        type: 'editable-edge',
        source: 'node3',
        target: 'node4',
        sourceHandle: 'output',
        targetHandle: 'input',
        animated: false,
        data: {
            algorithm: Algorithm.Linear,
            points: [],
        },
    },
    {
        id: 'node4->node0',
        type: 'editable-edge',
        source: 'node4',
        target: 'node0',
        sourceHandle: 'output',
        targetHandle: 'input',
        animated: false,
        data: {
            algorithm: Algorithm.Linear,
            points: [
                { x: 430, y: 850, id: uuidv4(), active: true },
                { x: 950, y: 850, id: uuidv4(), active: true },
                { x: 950, y: 240, id: uuidv4(), active: true },
                { x: 710, y: 240, id: uuidv4(), active: true },
            ],
        },
    },
    {
        id: 'node5->node0',
        type: 'editable-edge',
        source: 'node5',
        target: 'node0',
        sourceHandle: 'output',
        targetHandle: 'input',
        animated: false,
        data: {
            algorithm: Algorithm.Linear,
            points: [
                { x: 510, y: 800, id: uuidv4(), active: true },
                { x: 940, y: 800, id: uuidv4(), active: true },
                { x: 940, y: 250, id: uuidv4(), active: true },
                { x: 710, y: 250, id: uuidv4(), active: true },
            ],
        },
    },
    {
        id: 'node6->node7',
        type: 'editable-edge',
        source: 'node6',
        target: 'node7',
        sourceHandle: 'output',
        targetHandle: 'input',
        animated: false,
        data: {
            algorithm: Algorithm.Linear,
            points: [],
        },
    },
    {
        id: 'node7->node0',
        type: 'editable-edge',
        source: 'node7',
        target: 'node0',
        sourceHandle: 'output',
        targetHandle: 'input',
        animated: false,
        data: {
            algorithm: Algorithm.Linear,
            points: [
                { x: 590, y: 790, id: uuidv4(), active: true },
                { x: 930, y: 790, id: uuidv4(), active: true },
                { x: 930, y: 260, id: uuidv4(), active: true },
                { x: 710, y: 260, id: uuidv4(), active: true },
            ],
        },
    },
    {
        id: 'node8->node0',
        type: 'editable-edge',
        source: 'node8',
        target: 'node0',
        sourceHandle: 'output',
        targetHandle: 'input',
        animated: false,
        data: {
            algorithm: Algorithm.Linear,
            points: [
                { x: 710, y: 780, id: uuidv4(), active: true },
                { x: 920, y: 780, id: uuidv4(), active: true },
                { x: 920, y: 270, id: uuidv4(), active: true },
                { x: 710, y: 270, id: uuidv4(), active: true },
            ],
        },
    },
    {
        id: 'node9->node0',
        type: 'editable-edge',
        source: 'node9',
        target: 'node0',
        sourceHandle: 'output',
        targetHandle: 'input',
        animated: false,
        data: {
            algorithm: Algorithm.Linear,
            points: [
                { x: 830, y: 770, id: uuidv4(), active: true },
                { x: 910, y: 770, id: uuidv4(), active: true },
                { x: 910, y: 280, id: uuidv4(), active: true },
                { x: 710, y: 280, id: uuidv4(), active: true },
            ],
        },
    },
];
