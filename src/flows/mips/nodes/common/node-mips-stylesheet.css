.control-node, .alu-exit-node {
    padding: 10px;

    display: flex;
    align-items: center;
    justify-content: center;

    text-align: center;

    color: var(--text-color);
    background-color: var(--background-color);
    border: var(--border-width) solid var(--border-color);

    box-sizing: border-box;
    border-radius: 0.4em;

}

.mips-node {
    padding: 10px;
    display: flex;
    align-items: center;
    justify-content: center;
    text-align: center;

    color: var(--text-color);
    background-color: var(--background-color);
    border: var(--border-width) solid var(--border-color);
    box-sizing: border-box;
    border-radius: 0.4em;
}

.mips-node.control,
.mips-node.alu-control {
    border-color: orange;
}

.mips-node.control {
    border-radius: 50% !important;
}

.mips-node.multiplexer {
    border-radius: 4em;
}
.mips-node.sign-extend, .mips-node.shift-left-2, .mips-node.alu-control {
    border-radius: 100% !important;
}

.mips-node.memory, .mips-node.instruction-register {
    align-items: flex-end !important;
}

.mips-node.register {
    align-items: baseline;
}
.shift-left-2 {
    padding: 12px;
}

.number {
    justify-content: left;
    text-align: left;
    padding-left: 4px;
}

.control-node {
    border-radius: 50%; !important;
    border-color: orange;
}
.multiplexer-node {
    border-radius: 4em;
}



.alu-label {
    position: absolute;
    top: 50%;
    left: 50%;
    transform: translate(-50%, -50%);
    text-align: center;
    color: var(--text-color);
}

.mips-node.multiplexer .node-label {
    position: relative;
    left: -8px;
}

.mips-node.multiplexer .node-label.shifted {
    margin-top: 35px;

}

.mips-node-control-toggle {
    display: flex;
    align-items: center;
    gap: 0.5rem;
    padding: var(--padding-small);
    border-radius: var(--border-radius-small);
    background-color: var(--input-background-color);
    transition: background-color var(--transition-duration);
    margin-top: 8px;
    cursor: pointer;
}

.mips-node-control-toggle:hover {
    background-color: var(--input-background-color-hover);
}

.mips-node-control-toggle input[type="checkbox"] {
    cursor: pointer;
    accent-color: var(--control-color);
}